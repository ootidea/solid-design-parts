:where(.solid-design-parts-NumberInput_frame) {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;

  box-sizing: border-box;
  height: 100%;
  border-radius: var(--solid-design-parts-NumberInput_radius);
  border: 1px solid var(--solid-design-parts-input-border-color);
  background-color: var(--solid-design-parts-background-color);

  .solid-design-parts-NumberInput_root[aria-disabled='true'] & {
    background-color: var(--solid-design-parts-disabled-input-background-color);
  }

  /* TODO: Use :has() instead of CSS class */
  .solid-design-parts-NumberInput_input-element-has-focus & {
    border-color: var(--solid-design-parts-primary-color);
  }

  .solid-design-parts-NumberInput_root[aria-invalid='true'] & {
    border-color: var(--solid-design-parts-error-color);
  }
}

.solid-design-parts-NumberInput_prefix,
.solid-design-parts-NumberInput_suffix {
  display: grid;
  place-items: center;
  box-sizing: border-box;
  height: 100%;
}

.solid-design-parts-NumberInput_body {
  display: grid;
  grid-template-columns: minmax(0, 1fr) auto;
  gap: 0.3em;
  align-items: center;

  box-sizing: border-box;
  padding: 0 0.6em;
}

.solid-design-parts-NumberInput_input {
  box-sizing: border-box;
  padding: 0.35em 0;
  border: none;
  outline: none;
  appearance: none;
  background-color: transparent;

  font: inherit;
  line-height: inherit;
  letter-spacing: inherit;

  &::placeholder {
    color: var(--solid-design-parts-placeholder-text-color);
  }
}

.solid-design-parts-NumberInput_clear-button {
  &[aria-hidden='true'] {
    visibility: hidden;
  }
}
